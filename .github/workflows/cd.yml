name: Continuous Deployment

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Building ${{matrix.runs_on}}-${{ matrix.arch }} (${{ matrix.artifact_type }})
    runs-on: ${{ matrix.runs_on }}-latest
    strategy:
      matrix:
        runs_on: [macos, ubuntu]
        arch: [x86_64, aarch64, armv7]
        rust: [stable]
        artifact_type: ['slim', 'default', 'full']  # The build strategy will build all types for each OS specified
        include:
          # DBus configuration
          - artifact_type: slim
            dbus: ''
          - artifact_type: default
            dbus: dbus_mpris
          - artifact_type: full
            dbus: dbus_mpris
          # Cross Compilation Targets
          - runs_on: ubuntu
            arch: aarch64
            target: aarch64-unknown-linux-gnu
          - runs_on: ubuntu
            arch: armv7
            target: armv7-unknown-linux-gnueabihf
          # Audio backend configuration: Linux
          - runs_on: ubuntu
            artifact_type: slim
            audio_backends: alsa_backend
          - runs_on: ubuntu
            artifact_type: default
            audio_backends: alsa_backend,pulseaudio_backend,rodio_backend
          - runs_on: ubuntu
            artifact_type: full
            all_features: true
          # Audio backend configuration: macOS
          - runs_on: macos
            audio_backends: portaudio_backend,rodio_backend
        exclude:
          - runs_on: macos
            artifact_type: 'full'
          - runs_on: macos
            arch: armv7
          - runs_on: macos
            arch: aarch64
    steps:
      - name: Checking out sources
        uses: actions/checkout@v4
      - name: Installing needed macOS dependencies
        if: startsWith(matrix.runs_on, 'macos')
        run: brew install dbus portaudio
      - name: Installing needed Ubuntu dependencies
        if: startsWith(matrix.runs_on, 'ubuntu') && matrix.target == ''
        run: |
          sudo apt-get update
          # alsa_backend,rodio_backend and base deps
          sudo apt-get install -y libasound2-dev libssl-dev libclang-dev clang
          # dbus_mpris
          sudo apt-get install -y libdbus-1-dev
          # pulseaudio_backend
          sudo apt-get install -y libpulse-dev
          # portaudio_backend
          sudo apt-get install -y portaudio19-dev
      - name: Determine cargo args
        run: |
          if [ "${{ matrix.target }}" ]; then
            target="--target ${{ matrix.target }}"
          fi
          if [ "${{ matrix.all_features }}" = "true" ]; then
            features="--all-features"
          else
            features="--no-default-features --features ${{ matrix.dbus }},${{ matrix.audio_backends }}"
          fi
          echo CARGO_ARGS="--locked --release $target $features" | tee -a "$GITHUB_ENV"
      - name: Build (native)
        if: matrix.target == ''
        run: |
           cargo +${{ matrix.rust }} build $CARGO_ARGS
      - name: Build (using cross)
        if: matrix.target != ''
        uses: houseabsolute/actions-rust-cross@v1
        with:
          cross-version: 49338b1 # currently needed (check again if cross version > 0.2.5)
          command: build
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          args: $CARGO_ARGS
      - name: Uploading artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spotifyd-${{ matrix.runs_on == 'ubuntu' && 'linux' || 'macos' }}-${{ matrix.arch }}-${{ matrix.artifact_type }}
          path: target/${{ matrix.target }}/release/spotifyd
  release: # only runs when a version tag is pushed
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Downloading artifacts # download all binaries
        uses: actions/download-artifact@v4
      - name: Packaging final binary
        shell: bash
        run: |
          for artifact_dir in ./*/
          do
            pushd $artifact_dir
            artifact_name=$(basename $artifact_dir)
            tar czvf $artifact_name.tar.gz spotifyd
            shasum -a 512 $artifact_name.tar.gz > $artifact_name.sha512
            popd
          done
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*.tar.gz
            **/*.sha512
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
